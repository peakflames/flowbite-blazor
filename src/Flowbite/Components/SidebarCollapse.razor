
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@inherits FlowbiteComponentBase

<li style="list-style-type: none;">
    <button @onclick="ToggleState" 
            type="button" 
            class="@GetButtonClasses()"
            aria-controls="sidebar-collapse-@Id"
            aria-expanded="@_isOpen">
        @if (Icon != null)
        {
            <DynamicComponent Type="@Icon.GetType()" Parameters="@(new Dictionary<string, object>
            {
                { "class", "w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" },
                { "aria-hidden", true },
            })" />
        }
        <span class="flex-1 ms-3 text-left whitespace-nowrap">@Label</span>
        <ChevronDownIcon class="@GetChevronClasses()" aria-hidden="true" />
    </button>
    <ul id="sidebar-collapse-@Id" 
        class="@GetListClasses()"
        style="list-style-type: none;"
        hidden="@(!_isOpen)">
        @ChildContent
    </ul>
</li>

@code {
    private bool _isOpen;
    private string Id = Guid.NewGuid().ToString("N");

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public IconBase? Icon { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private string GetButtonClasses() => CombineClasses("flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700");

    private string GetChevronClasses() => CombineClasses($"w-6 h-6 text-gray-500 transition-transform dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white {(_isOpen ? "rotate-180" : "")}");

    private string GetListClasses() => CombineClasses("py-2 space-y-2 ps-7");
}
